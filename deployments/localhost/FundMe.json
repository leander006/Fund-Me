{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_Owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x65aff4e7f244196ff729b76d8ed3a8050c65b9e85ab4580e320f8169f011701e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "987318",
    "logsBloom": "0x
    "blockHash": "0x883bf306ee9028b70a1d104312f804eda216ea44b2ad03df1c3d35bc682fbd3b",
    "transactionHash": "0x65aff4e7f244196ff729b76d8ed3a8050c65b9e85ab4580e320f8169f011701e",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "987318",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d4d25faf2b62349205112b6c5def39ed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConvertor.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_Owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_Owner) revert NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceAddress) {\\n        i_Owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        address[] memory Funder = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < Funder.length;\\n            funderIndex++\\n        ) {\\n            address funder = Funder[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_Owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xc24e75f6ac107a795d43106dfc4eb9a9eb0d8bc40af02e526957f6d3c87bee35\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xdbac9085ff7d2a60e8d77db74067a977f9a0877b0b7913da17746f870f86b907\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011fa380380620011fa833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61107b6200017f60003960008181610433015281816106e6015261077e015261107b6000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063d7b4750c146101a0578063e667b0bf146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b3661009957610097610208565b005b6100a1610208565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610986565b610342565b6040516100d791906109cc565b60405180910390f35b3480156100ec57600080fd5b506100f561038a565b60405161010291906109cc565b60405180910390f35b610113610431565b005b34801561012157600080fd5b5061012a6106d5565b60405161013791906109cc565b60405180910390f35b34801561014c57600080fd5b506101556106e2565b60405161016291906109f6565b60405180910390f35b34801561017757600080fd5b5061018061070a565b60405161018d9190610a70565b60405180910390f35b61019e610208565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610ab7565b610734565b6040516101d491906109f6565b60405180910390f35b3480156101e957600080fd5b506101f261077c565b6040516101ff91906109f6565b60405180910390f35b6802b5e3af16b1880000610247600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107a090919063ffffffff16565b1015610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f90610b41565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d69190610b90565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f457600080fd5b505afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610bfb565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b6576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561053a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104f0575b5050505050905060005b81518110156105c457600082828151811061056257610561610c28565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105bc90610c57565b915050610544565b50600067ffffffffffffffff8111156105e0576105df610ca0565b5b60405190808252806020026020018201604052801561060e5781602001602082028036833780820191505090505b506001908051906020019061062492919061087c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161064b90610d00565b60006040518083038185875af1925050503d8060008114610688576040519150601f19603f3d011682016040523d82523d6000602084013e61068d565b606091505b50509050806106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610d61565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061074a57610749610c28565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806107ac836107dc565b90506000670de0b6b3a764000085836107c59190610d81565b6107cf9190610e0a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561082557600080fd5b505afa158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190610eb3565b5050509150506402540be400816108749190610f2e565b915050919050565b8280548282559060005260206000209081019282156108f5579160200282015b828111156108f45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061089c565b5b5090506109029190610906565b5090565b5b8082111561091f576000816000905550600101610907565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095382610928565b9050919050565b61096381610948565b811461096e57600080fd5b50565b6000813590506109808161095a565b92915050565b60006020828403121561099c5761099b610923565b5b60006109aa84828501610971565b91505092915050565b6000819050919050565b6109c6816109b3565b82525050565b60006020820190506109e160008301846109bd565b92915050565b6109f081610948565b82525050565b6000602082019050610a0b60008301846109e7565b92915050565b6000819050919050565b6000610a36610a31610a2c84610928565b610a11565b610928565b9050919050565b6000610a4882610a1b565b9050919050565b6000610a5a82610a3d565b9050919050565b610a6a81610a4f565b82525050565b6000602082019050610a856000830184610a61565b92915050565b610a94816109b3565b8114610a9f57600080fd5b50565b600081359050610ab181610a8b565b92915050565b600060208284031215610acd57610acc610923565b5b6000610adb84828501610aa2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b2b601b83610ae4565b9150610b3682610af5565b602082019050919050565b60006020820190508181036000830152610b5a81610b1e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9b826109b3565b9150610ba6836109b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bdb57610bda610b61565b5b828201905092915050565b600081519050610bf581610a8b565b92915050565b600060208284031215610c1157610c10610923565b5b6000610c1f84828501610be6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c62826109b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9557610c94610b61565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cea600083610ccf565b9150610cf582610cda565b600082019050919050565b6000610d0b82610cdd565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4b600b83610ae4565b9150610d5682610d15565b602082019050919050565b60006020820190508181036000830152610d7a81610d3e565b9050919050565b6000610d8c826109b3565b9150610d97836109b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd057610dcf610b61565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e15826109b3565b9150610e20836109b3565b925082610e3057610e2f610ddb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5a81610e3b565b8114610e6557600080fd5b50565b600081519050610e7781610e51565b92915050565b6000819050919050565b610e9081610e7d565b8114610e9b57600080fd5b50565b600081519050610ead81610e87565b92915050565b600080600080600060a08688031215610ecf57610ece610923565b5b6000610edd88828901610e68565b9550506020610eee88828901610e9e565b9450506040610eff88828901610be6565b9350506060610f1088828901610be6565b9250506080610f2188828901610e68565b9150509295509295909350565b6000610f3982610e7d565b9150610f4483610e7d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f8357610f82610b61565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fc057610fbf610b61565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ffd57610ffc610b61565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561103a57611039610b61565b5b82820290509291505056fea26469706673582212208e3b90a0cdefc757e5881cdc857c150cd0e24908702d8cf10b7b81eb8ba11d1064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063d7b4750c146101a0578063e667b0bf146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b3661009957610097610208565b005b6100a1610208565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610986565b610342565b6040516100d791906109cc565b60405180910390f35b3480156100ec57600080fd5b506100f561038a565b60405161010291906109cc565b60405180910390f35b610113610431565b005b34801561012157600080fd5b5061012a6106d5565b60405161013791906109cc565b60405180910390f35b34801561014c57600080fd5b506101556106e2565b60405161016291906109f6565b60405180910390f35b34801561017757600080fd5b5061018061070a565b60405161018d9190610a70565b60405180910390f35b61019e610208565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190610ab7565b610734565b6040516101d491906109f6565b60405180910390f35b3480156101e957600080fd5b506101f261077c565b6040516101ff91906109f6565b60405180910390f35b6802b5e3af16b1880000610247600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107a090919063ffffffff16565b1015610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f90610b41565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d69190610b90565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f457600080fd5b505afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610bfb565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b6576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561053a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104f0575b5050505050905060005b81518110156105c457600082828151811061056257610561610c28565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105bc90610c57565b915050610544565b50600067ffffffffffffffff8111156105e0576105df610ca0565b5b60405190808252806020026020018201604052801561060e5781602001602082028036833780820191505090505b506001908051906020019061062492919061087c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161064b90610d00565b60006040518083038185875af1925050503d8060008114610688576040519150601f19603f3d011682016040523d82523d6000602084013e61068d565b606091505b50509050806106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610d61565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061074a57610749610c28565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806107ac836107dc565b90506000670de0b6b3a764000085836107c59190610d81565b6107cf9190610e0a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561082557600080fd5b505afa158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190610eb3565b5050509150506402540be400816108749190610f2e565b915050919050565b8280548282559060005260206000209081019282156108f5579160200282015b828111156108f45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061089c565b5b5090506109029190610906565b5090565b5b8082111561091f576000816000905550600101610907565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095382610928565b9050919050565b61096381610948565b811461096e57600080fd5b50565b6000813590506109808161095a565b92915050565b60006020828403121561099c5761099b610923565b5b60006109aa84828501610971565b91505092915050565b6000819050919050565b6109c6816109b3565b82525050565b60006020820190506109e160008301846109bd565b92915050565b6109f081610948565b82525050565b6000602082019050610a0b60008301846109e7565b92915050565b6000819050919050565b6000610a36610a31610a2c84610928565b610a11565b610928565b9050919050565b6000610a4882610a1b565b9050919050565b6000610a5a82610a3d565b9050919050565b610a6a81610a4f565b82525050565b6000602082019050610a856000830184610a61565b92915050565b610a94816109b3565b8114610a9f57600080fd5b50565b600081359050610ab181610a8b565b92915050565b600060208284031215610acd57610acc610923565b5b6000610adb84828501610aa2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b2b601b83610ae4565b9150610b3682610af5565b602082019050919050565b60006020820190508181036000830152610b5a81610b1e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9b826109b3565b9150610ba6836109b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bdb57610bda610b61565b5b828201905092915050565b600081519050610bf581610a8b565b92915050565b600060208284031215610c1157610c10610923565b5b6000610c1f84828501610be6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c62826109b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9557610c94610b61565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cea600083610ccf565b9150610cf582610cda565b600082019050919050565b6000610d0b82610cdd565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4b600b83610ae4565b9150610d5682610d15565b602082019050919050565b60006020820190508181036000830152610d7a81610d3e565b9050919050565b6000610d8c826109b3565b9150610d97836109b3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd057610dcf610b61565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e15826109b3565b9150610e20836109b3565b925082610e3057610e2f610ddb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5a81610e3b565b8114610e6557600080fd5b50565b600081519050610e7781610e51565b92915050565b6000819050919050565b610e9081610e7d565b8114610e9b57600080fd5b50565b600081519050610ead81610e87565b92915050565b600080600080600060a08688031215610ecf57610ece610923565b5b6000610edd88828901610e68565b9550506020610eee88828901610e9e565b9450506040610eff88828901610be6565b9350506060610f1088828901610be6565b9250506080610f2188828901610e68565b9150509295509295909350565b6000610f3982610e7d565b9150610f4483610e7d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f8357610f82610b61565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fc057610fbf610b61565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ffd57610ffc610b61565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561103a57611039610b61565b5b82820290509291505056fea26469706673582212208e3b90a0cdefc757e5881cdc857c150cd0e24908702d8cf10b7b81eb8ba11d1064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}